- name: Install shipping components
  hosts: shipping
  become: yes
  tasks:
  - name: Install maven
    ansible.builtin.yum:
      name: maven
      state: installed

  - name: check roboshop exists or not 
    ansible.builtin.command: id roboshop
    register: out
    ignore_errors: true

  - name: create the user roboshop
    when: out.rc != 0
    ansible.builtin.user:
      name: roboshop

  - name: check the directory exists or not
    ansible.builtin.stat:
      path: /app
    register: directory

  - name: print the directory state
    ansible.builtin.debug:
      msg: "output:{{directory}}"

  - name: create /app directory
    when: directory.stat.exists == False
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download shipping and extract 
    ansible.builtin.unarchive:
      src: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /app
      remote_src: yes    

  - name: mven package
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app    

  - name: rename jarfile
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app    

  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: demon reload
    ansible.builtin.systemd:
      daemon_reload: true

  - name: install mysql client
    ansible.builtin.yum:
      name: mysql
      state: installed

  - name: load mysql schema
    ansible.builtin.shell: mysql -h mysql.joindevops.store -uroot -pRoboShop@1 < /app/schema/shipping.sql     

  - name: enable and restart shipping
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: yes
  